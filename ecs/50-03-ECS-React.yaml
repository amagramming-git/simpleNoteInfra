AWSTemplateFormatVersion: "2010-09-09"
Description: "ECS-React"
Mappings:
  LocalValueMap:
    LocalValues:
      Cpu: "256"
      Memory: "512"
      EphemeralStorageSizeInGiB: 21

Parameters:
  Dns:
    Type: "String"
    
Resources:
  ReactLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/logs/simplenote/react

  ReactTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: react-container
          Image: !ImportValue ReactEcrRepositoryUri
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ReactLogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: react
          PortMappings:
            - Protocol: tcp
              ContainerPort: 3000
          Environment:
            - Name: REACT_APP_REST_API_ENDPOINT
              Value: !Sub
                - "https://${Dns}"
                - Dns: !Ref Dns
      Cpu: !FindInMap [LocalValueMap, LocalValues, Cpu]
      EphemeralStorage:
        SizeInGiB:
          !FindInMap [LocalValueMap, LocalValues, EphemeralStorageSizeInGiB]
      ExecutionRoleArn: !ImportValue EcsTaskExecutionRoleArn
      Family: react
      Memory: !FindInMap [LocalValueMap, LocalValues, Memory]
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE

  ReactTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue VpcId
      Name: "ReactTargetGroup"
      Protocol: HTTP
      Port: 3000
      TargetType: ip

  ReactListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ReactTargetGroup
      Priority: 2
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/*"
      ListenerArn: !ImportValue AlbListenerArn

  ReactEcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !ImportValue EcsClusterName
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref ReactTargetGroup
          ContainerPort: 3000
          ContainerName: react-container
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue ReactSecurityGroupId
          Subnets:
            - !ImportValue "Subnet2Id"
            - !ImportValue "Subnet6Id"
      PlatformVersion: LATEST
      SchedulingStrategy: REPLICA
      ServiceName: "react-service"
      TaskDefinition: !Ref "ReactTaskDefinition"

Outputs:
  ReactTaskDefinitionArn:
    Value: !Ref "ReactTaskDefinition"
    Export:
      Name: "ReactTaskDefinitionArn"
  ReactEcsServiceName:
    Value: !GetAtt "ReactEcsService.Name"
    Export:
      Name: "ReactEcsServiceName"
