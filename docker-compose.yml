version: '3'
services:
    node:
        build:
            context: ../simpleNoteReact
            dockerfile: Dockerfile
        volumes:
            - ../simpleNoteReact/:/usr/src/app  # ローカルとコンテナ内の同期
        ports:
            - "3000:3000"
        env_file:
            - ../simpleNoteReact/.env
    db:
        image: mysql:5.7
        env_file:
            - ../simpleNoteMySQL/.env
        command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
        ports:
            - "3306:3306"
        volumes:
            - ../simpleNoteMySQL/mysql_data:/var/lib/mysql
    app:
        build: ../simpleNoteDjango
        # --insecureオプションはDEBUGがFalseでもCSSを読み込むためのオプション
        command: python3 manage.py runserver 0.0.0.0:8000 --insecure
        volumes:
            - ../simpleNoteDjango:/code   # ローカルとコンテナ内の同期
        ports:
            - "8000:8000"
        env_file:
            - ../simpleNoteDjango/.env
        depends_on:
            - db

# docker-composeでの新規作成の際の手順
# docker や docker-compose をインストールします。
# docker-compose.ymlファイルがあるところにターミナルで移動する
# 以下のコマンドを2つ実行する
# docker-compose build
# docker-compose up -d
# ここまででdockerのイメージができたので、次にpythonのサーバーに入ってmigrateをする
# docker-compose exec app bash
# python manage.py migrate
# exit
# test用のDatabaseを作成する
# docker-compose exec db bash
# mysql -h db -u root -p
# GRANT ALL PRIVILEGES ON test_djangodb.* TO 'django'@'%';
# 以下のURLでアクセスすると、アプリが使用できる。
# http://localhost:3000/
# サーバーを停止する場合には以下のコマンドを実行する
# docker-compose down